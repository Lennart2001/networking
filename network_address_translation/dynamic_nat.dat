=============================== Dynamic Network Address Translation ===============================


A packet contains a Data Payload, a L4 header, and a L3 header:
  - Data Payload: Data
  - L4 Header: Responsible for handling ports (src Port - dest Port)
  - L3 Header: Responsible for handling IP Addresses (src IP - dest IP)

Now, if the packet crosses a router and ONLY the IP address gets changed/translated,
it is called NAT
  - Network Address Translation
  - NAT only changes the Layer 3 header.


Dynamic:
  - The device chooses the POST attributes of the translations
  - If a packet travels OUTBOUND, the device will update its Router Translation Table
    and add the internal IP:Port mapping of a host, and the public IP Address with
    a random port mapping:  192.168.1.2:7777 <-> 32.8.2.6:9999
                                Internal            Public

Keep in mind that we DO NOT translate the ports
  - This means each host will have its OWN IP Address
    - Multiple Devices cannot share IP Addresses


This is out current topology:
┌----------------------------------------------------------┐
|                              Inside Network: 10.7.7.0/24 |
| ┌--------------------┐                                   |                                     ┌------------------┐
| | Host A: 10.7.7.71  |-----\           ┌----------------------------------┐     _________  /---| Host E: 86.6.6.6 |
| └--------------------┘      \          |             Router 1             |    {         }/    └------------------┘
| ┌--------------------┐       \---------|            Dynamic NAT           |   {           }    ┌------------------┐
| | Host B: 10.7.7.72  |-----------------|     10.7.7.0/24 will share:      |   |           |----| Host F: 86.6.6.7 |
| └--------------------┘                 |--┐ 54.5.4.1 through 54.5.4.3 ┌---|   |           |    └------------------┘
| ┌--------------------┐                 |  └---------------------------┘   |---|  Internet |    ┌------------------┐
| | Host C: 10.7.7.73  |-----------------| 10.7.7.71:1111 <-> 54.5.4.1:1111 |   |           |----| Host G: 86.6.6.8 |
| └--------------------┘       /---------| 10.7.7.72:2222 <-> 54.5.4.2:2222 |   |           |    └------------------┘
| ┌--------------------┐      /          | 10.7.7.73:3333 <-> 54.5.4.3:3333 |   {           }    ┌------------------┐
| | Host D: 10.7.7.74  |-----/           |                                  |    {_________}\----| Host H: 86.6.6.9 |
| └--------------------┘                 └----------------------------------┘                    └------------------┘
└----------------------------------------------------------┘


When Host A sends a package to Host E, Host A gets assigned 54.5.4.1 as it's public IP Address
  - The mapping will be something like 10.7.7.71:1111 <-> 54.5.4.1:1111

When Host B sends a package to Host F, Host B gets assigned 54.5.4.2 as it's public IP Address
  - The mapping will be something like 10.7.7.72:2222 <-> 54.5.4.2:2222

When Host C sends a package to Host G, Host C gets assigned 54.5.4.3 as it's public IP Address
  - The mapping will be something like 10.7.7.73:3333 <-> 54.5.4.3:3333

When Host D tries to send a package to Host H, the package gets DROPPED, as there is no available IP Address
for Host D at this time.

ONCE any host releases their connection, say Host A, then that associated Public IP Address becomes freed again,
which can then be picked up by Host D, if it tries to send a new packet.
  - So, whichever hosts shoots out a packet next will receive the available Public IP Address

┌----------------------------------┐
|             Router 1             |
|            Dynamic NAT           |
|     10.7.7.0/24 will share:      |
|--┐ 54.5.4.1 through 54.5.4.3 ┌---|
|  └---------------------------┘   |
|                                  |
| 10.7.7.72:2222 <-> 54.5.4.2:2222 |
| 10.7.7.73:3333 <-> 54.5.4.3:3333 |
| 10.7.7.74:4445 <-> 54.5.4.1:4445 |
└----------------------------------┘

Now, if Host A tries to send out a packet, it will get immediately DROPPED because we do not have an IP Address
available for Host A.


Here are some use cases for Dynamic NAT:

Dynamic NATs are Bidirectional when active.
  - Notice how we assigned WHOLE IP Addresses to each Host
    - During the duration of that connection, each Host OWNS a Public IP Address
       - If Host E sends a packet to 54.5.4.2, it automatically gets forwarded to Host B.
  - This is particularly useful for protocols which require a secondary, inbound connection to the Client
    - One protocol would be the File Transfer Protocol (FTP)
      - Active FTP & Passive FTP

Creating LAZY "Static NAT" ~> Dynamic NAT?
  - Suppose we had 20 hosts and 20 Public IP Addresses to use
    - We could assign each Host to a Public IP Address
      - Also known as creating a Static NAT
    - We could also create a Dynamic NAT, where the IP Addresses are being handled automatically.
      - This would only work though if you had an equal number of Hosts and Public IP Addresses
        - More specifically, you would need more or equal Public IPs than Hosts for this to work
        - # Public IPs >= # Hosts
  - With our topology from above, where we have 4 Hosts and 3 public IP Addresses,
    the Lazy "Static NAT" would not work.
    - However, if we DIDN'T have host B, then we would have 3 Hosts and 3 Public IP Address,
      then we could configure the network to utilize the Lazy "Static NAT"
  - Additionally, for Lazy "Static NAT" to be a good solution, we must not care about the IP mapping
    - Since the Router randomly decides which Host gets which IP Address, and if two Hosts are
      "offline" and are re-establishing their connection then they might end up with different
      IPs than before
    - The exact mapping of Private IPs to Public IPs must be irrelevant

┌----------------------------------┐        ┌----------------------------------┐
|             Router 1             |        |             Router 1             |  *Notice how all Hosts are
|            Dynamic NAT           |        |            Dynamic NAT           |   assigned a new Public IP
|     10.7.7.0/24 will share:      |        |     10.7.7.0/24 will share:      |   Address.
|--┐ 54.5.4.1 through 54.5.4.3 ┌---|   ==   |--┐ 54.5.4.1 through 54.5.4.3 ┌---|
|  └---------------------------┘   |   ==   |  └---------------------------┘   |  *This must not interfere with
| 10.7.7.72:2222 <-> 54.5.4.2:2222 |        | 10.7.7.72:2222 <-> 54.5.4.3:2222 |   functionality
| 10.7.7.73:3333 <-> 54.5.4.3:3333 |        | 10.7.7.73:3333 <-> 54.5.4.1:3333 |
| 10.7.7.74:4445 <-> 54.5.4.1:4445 |        | 10.7.7.74:4445 <-> 54.5.4.2:4445 |
└----------------------------------┘        └----------------------------------┘


The Disadvantages of Dynamic NAT:

Dynamic NATs are NOT deterministic
  - Each Host gets randomly assigned an available Public IP Address
    - This makes things challenging when trying to create specific rules for specific IPs

Dynamic NATs have inconsistent connectivity
  - Going back to our topology, if Host A doesn't have a active connection, it will lose its Public IP Address
    - Then, Host A cannot communicate with the outside anymore until a Public IP gets freed
    - Also, all the messages meant to Host A's previous Public IP are now being sent to the wrong Host
  - Inconsistent Connectivity is a hassle to troubleshoot in the real world
    - Dynamic NAT is not very common in the modern world


=================== SIDE NOTE ===================

Dynamic PAT and Dynamic NAT are often times used interchangeably
  - Most of the time, when someone says Dynamic NAT, they mean Dynamic PAT

